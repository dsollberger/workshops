subtitle = "The 2019 Minnesota Twins had the largest\npositive deviation with 26.6 wins above average",
caption = "The 2019 Detroit Tigers had the largest\nnegative deviation with 30.8 wins below average",
x = "",
y = "wins") +
theme(axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
# axis.ticks = element_blank(),
legend.position = "none",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(size = 15, face = "bold",
color = "black", hjust = 0.0),
plot.subtitle = element_text(size = 20,
color = "#D31145", hjust = 0.5),
plot.caption = element_text(size = 20,
color = "#0C2340", hjust = 0.5))
d28_plot
d28_plot <- d28_data |>
ggplot() +
geom_line(aes(x = yearID, y = W, group = name), color = "gray75", size = 2) +
# focus on the line graphs of the two teams
geom_line(aes(x = yearID, y = W),
color = "#D31145", #https://teamcolorcodes.com/minnesota-twins-color-codes/
data = d28_data |> filter(name == "Minnesota Twins"),
size = 2) +
geom_line(aes(x = yearID, y = W_avg),
color = "#D31145", #https://teamcolorcodes.com/minnesota-twins-color-codes/
data = d28_data |> filter(name == "Minnesota Twins"),
linetype = "dashed",
size = 2) +
# drawing dashed lines for the averages
geom_line(aes(x = yearID, y = W),
color = "#0C2340", #https://teamcolorcodes.com/detroit-tigers-color-codes/
data = d28_data |> filter(name == "Detroit Tigers"),
size = 2) +
geom_line(aes(x = yearID, y = W_avg),
color = "#0C2340", #https://teamcolorcodes.com/detroit-tigers-color-codes/
data = d28_data |> filter(name == "Detroit Tigers"),
linetype = "dashed",
size = 2) +
# drawing error bars to highlight those deviations
geom_errorbar(aes(x = yearID, ymin = W_avg, ymax = W),
color = "#D31145", #https://teamcolorcodes.com/minnesota-twins-color-codes/
data = d28_data |> filter(name == "Minnesota Twins" & yearID == 2019),
size = 4) +
geom_errorbar(aes(x = yearID, ymin = W, ymax = W_avg),
color = "#0C2340", #https://teamcolorcodes.com/detroit-tigers-color-codes/
data = d28_data |> filter(name == "Detroit Tigers" & yearID == 2019),
size = 4) +
# labeling the dashed lines (for averages, and to clarify team names and colors)
ggrepel::geom_label_repel(aes(x = yearID, y = W_avg, label = for_label),
color = "#002B5C",
data = d28_data_for_labels |> filter(name == "Minnesota Twins"),
fill = "#D31145") +
ggrepel::geom_label_repel(aes(x = yearID, y = W_avg, label = for_label),
color = "#FA4616",
data = d28_data_for_labels |> filter(name == "Detroit Tigers"),
fill = "#0C2340") +
scale_x_continuous(breaks = c(2011:2021),
labels = c("2011", "2012", "2013", "2014", "2015",
"2016", "2017", "2018", "2019", "", "2021")) +
labs(title = "30 Day Chart Challenge, Day 28: Deviations\nWhen comparing MLB teams' wins\nagainst their averages from the past 10 full seasons,",
subtitle = "The 2019 Minnesota Twins had the largest\npositive deviation with 26.6 wins above average",
caption = "The 2019 Detroit Tigers had the largest\nnegative deviation with 30.8 wins below average",
x = "",
y = "wins") +
theme(axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
# axis.ticks = element_blank(),
legend.position = "none",
legend.title = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title = element_text(size = 15, face = "bold",
color = "black", hjust = 0.0),
plot.subtitle = element_text(size = 20,
color = "#D31145", hjust = 0.5),
plot.caption = element_text(size = 20,
color = "#0C2340", hjust = 0.5))
d28_plot
(0.89)*(0.45) / ((0.89)*(0.45) + (0.87)*(1 - 0.45))
Q <- runif(12)
W <- Q / sum(Q)
E <- round(W, 2)
sum(E)
E
(0)*(0.26) + (1)*(0.23) + (2)*(0.25) + (3)*(0.26)
((0)*(0.02) + (1)*(0.17) + (2)*(0.07)) / (0.02 + 0.17 + 0.07)
((0)^2(0.02) + (1)^2(0.17) + (2)^2(0.07))/(0.02 + 0.17 + 0.07)
((0)^2*(0.02) + (1)^2*(0.17) + (2)^2*(0.07))/(0.02 + 0.17 + 0.07)
1.7308-1.1923^2
sqrt(0.3092)
16^2 / ((0.10)*(0.032)^2*(97)^2)
install.packages("blogdown")
library("blogdown")
install.packages("blogdown")
library('blogdown')
plastics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-26/plastics.csv')
setwd("~/GitHub/workshops/R")
readr::write_csv(plastics, "plastics.csv")
library("tidyverse")
plastics_data <- readr::read_csv("plastics.csv")
str(plastics_data)
?str
str(plastics_data, give.attr = FALSE)
plastics_data |>
summarize(mean = mean(hdpe, na.rm = TRUE),
median = median(hdpe, na.rm = TRUE),
sd = sd(hdpe, na.rm = TRUE))
plastics_data |>
filter(!is.na(hdpe)) |>
ggplot(aes(x = year, y = hdpe)) +
geom_point()
plastics_data |>
filter(!is.na(hdpe)) |>
ggplot(aes(x = hdpe)) +
geom_histogram()
plastics_data |>
filter(hdpe > 0) |>
ggplot(aes(x = hdpe)) +
geom_histogram()
View(plastics)
View(plastics_data)
plastics_data |>
filter(volunteers > 0) |>
ggplot(aes(x = volunteers)) +
geom_histogram()
plastics_data |>
summarize(mean = mean(ldpe, na.rm = TRUE),
median = median(ldpe, na.rm = TRUE),
sd = sd(ldpe, na.rm = TRUE))
plastics_data |>
filter(!is.na(ldpe)) |>
ggplot(aes(x = ldpe)) +
geom_histogram()
plastics_data |>
filter(ldpe > 0) |>
ggplot(aes(x = ldpe)) +
geom_histogram()
library("skimr")
install.packages("skimr")
library("skimr")
library("tidyverse")
skimr::skim(plastics_data)
plastics_data |>
filter(!is.na(hdpe)) |>
filter(!is.na(ldpe)) |>
ggplot(aes(x = ldpe, y = hdpe)) +
geom_point()
table(plastics_data$country)
table(plastics_data$parent_company)
correlation_value <- plastics_data |>
summarize(r = cor(hdpe, ldpe,
use = "pairwise.complete.obs")) |>
unlist()
plastics_data |>
filter(!is.na(hdpe)) |>
filter(!is.na(ldpe)) |>
ggplot(aes(x = ldpe, y = hdpe)) +
geom_point() +
labs(title = "Plastic Pollution",
subtitle = paste0("correlation: r = ", correlation_value),
caption = "Source: Break Free from Plastic",
x = "low density polyethylene count",
y = "high density polyethylene count")
plastics_data |>
filter(!is.na(hdpe)) |>
filter(!is.na(ldpe)) |>
ggplot(aes(x = ldpe, y = hdpe)) +
geom_point() +
labs(title = "Plastic Pollution",
subtitle = paste0("correlation: r = ",
round(correlation_value, 4)),
caption = "Source: Break Free from Plastic",
x = "low density polyethylene count",
y = "high density polyethylene count")
library("corrplot")
install.packages("corrplot")
library("corrplot")
library("skimr")
library("tidyverse")
plastics_numeric_data <- plastics_data |>
select(is.numeric)
plastics_numeric_data <- plastics_data |>
select(where(is.numeric))
View(plastics_numeric_data)
plastics_numeric_data <- plastics_data |>
select(where(is.numeric)) |>
select(-year)
plastics_numeric_data <- plastics_data |>
select(where(is.numeric)) |>
select(-year)
corrplot.mixed(plastics_numeric_data)
plastics_numeric_data <- plastics_data |>
select(where(is.numeric)) |>
select(-year)
corrplot.mixed(cor(plastics_numeric_data,
use = "pairwise.complete.obs"))
plastics_numeric_data <- plastics_data |>
select(where(is.numeric)) |>
select(-year)
corrplot(cor(plastics_numeric_data,
use = "pairwise.complete.obs"),
method = "number")
corrplot(cor(plastics_numeric_data,
use = "pairwise.complete.obs"),
method = "color",
order = "alphabet")
corrplot(cor(plastics_numeric_data,
use = "pairwise.complete.obs"),
addCoef.col = "black",
order = "alphabet")
plastics_data |>
ggplot(aes(x = parent_company, y = grand_total)) +
geom_barplot(stat = "identity")
plastics_data |>
ggplot(aes(x = parent_company, y = grand_total)) +
geom_bar(stat = "identity")
plastics_data |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(parent_company != "Grand Total") |>
filter(parent_company != "null") |>
filter(parent_company != "NULL") |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "assorted"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity") +
coord_flip()
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity") +
coord_flip()
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = order(company_count))) +
geom_bar(stat = "identity") +
coord_flip()
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = order(parent_company, company_count), y = company_count)) +
geom_bar(stat = "identity") +
coord_flip()
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity") +
coord_flip()
?order
library("corrplot")
library("forcats")
library("skimr")
library("tidyverse")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = parent_company, y = company_count)) +
geom_bar(stat = "identity") +
coord_flip()
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count)) +
geom_bar(stat = "identity") +
coord_flip()
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Plastic Pollution",
subtitle = "Top 10 sources for plastic pollution",
caption = "Source: Break Free from Plastic",
x = "parent company",
y = "total count of recovered plastics")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count,
fill = company_ranked)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Plastic Pollution",
subtitle = "Top 10 sources for plastic pollution",
caption = "Source: Break Free from Plastic",
x = "parent company",
y = "total count of recovered plastics")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count,
fill = company_ranked)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Plastic Pollution",
subtitle = "Top 10 sources for plastic pollution",
caption = "Source: Break Free from Plastic",
x = "parent company",
y = "total count of recovered plastics") +
theme(legend.position = "none")
df <- plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10)
View(df)
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(parent_company = rename(parent_company,
"Tamil Nadu Co-operative Milk Producers' Federation Ltd
", "Tamil Nady Co-op")) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count,
fill = company_ranked)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Plastic Pollution",
subtitle = "Top 10 sources for plastic pollution",
caption = "Source: Break Free from Plastic",
x = "parent company",
y = "total count of recovered plastics") +
theme(legend.position = "none")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
mutate(parent_company = replace(parent_company,
parent_company == "Tamil Nadu Co-operative Milk Producers' Federation Ltd
",
"Tamil Nady Co-op")) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count,
fill = company_ranked)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Plastic Pollution",
subtitle = "Top 10 sources for plastic pollution",
caption = "Source: Break Free from Plastic",
x = "parent company",
y = "total count of recovered plastics") +
theme(legend.position = "none")
plastics_data |>
filter(!is.na(parent_company)) |>
filter(!(parent_company %in%
c("Grand Total", "null", "NULL", "Assorted", "Unbranded"))) |>
group_by(parent_company) |>
mutate(company_count = sum(grand_total)) |>
ungroup() |>
select(parent_company, company_count) |>
distinct() |>
top_n(10) |>
#   mutate(parent_company = replace(parent_company,
#                                  parent_company == "Tamil Nadu Co-operative Milk Producers' Federation Ltd
# ",
# "Tamil Nadu Co-op")) |>
mutate(company_ranked = fct_reorder(parent_company, company_count)) |>
ggplot(aes(x = company_ranked, y = company_count,
fill = company_ranked)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Plastic Pollution",
subtitle = "Top 10 sources for plastic pollution",
caption = "Source: Break Free from Plastic",
x = "parent company",
y = "total count of recovered plastics") +
theme(legend.position = "none")
